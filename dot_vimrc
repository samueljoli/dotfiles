" -----------------------------------------------------------------------------
" Vim >= 8. This assume you to have Plug installed.
" -----------------------------------------------------------------------------

" -----------------------------------------------------------------------------
" Plugins
" -----------------------------------------------------------------------------
call plug#begin()

Plug 'morhetz/gruvbox'                              " colorscheme
Plug 'luochen1990/rainbow'                          " colored brackets
Plug 'sheerun/vim-polyglot'                         " language syntax highlighting
Plug 'jelera/vim-javascript-syntax'                 " JS syntax highlighting
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } } " fuzzy finder
Plug 'junegunn/fzf.vim'
Plug 'garbas/vim-snipmate'                          " snippets
Plug 'MarcWeber/vim-addon-mw-utils'
Plug 'tomtom/tlib_vim'
Plug 'honza/vim-snippets'
Plug 'vim-scripts/AutoComplPop'                     " Show autocomplete menu Automatically
Plug 'tomtom/tcomment_vim'                          " Commenting
Plug 'tpope/vim-surround'                           " surroundings: parentheses, brackets, quotes, etc

call plug#end()

function! GetSnipsInCurrentScope()
    let word = matchstr(getline('.'), '\S\+\%'.col('.').'c')
    let list = snipMate#GetSnippetsForWordBelowCursor('', '*',  0)
    let result = {}
    for [trigger, snips] in list
        if len(snips) == 1
            let result[trigger] = values(snips)[0]
        else
            let result[trigger] = items(snips)
        endif
    endfor
    return result
endfunction

" -------------------- Global configs --------------------
set noswapfile

" Load zshrc alias commands in vim (EXPERIMENTAL)
" autocmd vimenter * let &shell='/bin/zsh -i'

"File directory
let g:netrw_banner = 0 "remove directory banner
let g:netrw_winsize = 25 "set directory window to 25% of screen
let g:netrw_liststyle = 3 "set list view style to 3
let g:netrw_altv = 1 "?
" let g:netrw_browse_split = 0 "close directory when opening a file
" If you don't have a hide list and just want to use gh's:
let ghregex='\(^\|\s\s\)\zs\.\S\+'
let g:netrw_list_hide=ghregex


"File navigation
set relativenumber
set rnu
set ruler " show the cursor position all the time
set number
set numberwidth=5
set mouse=a       " Allow scrolling using mousepad

"Tab
set smartindent
set autoindent
set tabstop=4
set shiftwidth=4
set expandtab

" GF (Go to file)
set path+=$PWD/node_modules " Enable jumping into node_modules

set laststatus=2  " Always display the status line
set autowrite     " Automatically :write before running commands

set backspace=indent,eol,start "Fix delete in insert mode

set hlsearch "Highlight all search matches

set re=0 "Set redraw to 0. Configured because Typescript syntax highlighting is broken

" -------------------- Mappings --------------------
" j/k/h/l to switch panes
noremap <C-j> <C-W>j
noremap <C-k> <C-W>k
noremap <C-h> <C-W>h
noremap <C-l> <C-W>l

" Tab complete
" inoremap <Tab> <C-P>

" map leader to spacebar
let mapleader = "\<Space>"

" map control + p for word search
noremap <C-w> :Ag<Enter>

" map control + f for file search
noremap <C-f> :Files<Enter>

" open silver searcher for word under cursor
nnoremap <silent> <Leader>ag :Ag <C-R><C-W><CR>

" -------------------- Syntax --------------------
syntax on
syntax enable
" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if (&t_Co > 2 || has("gui_running")) && !exists("syntax_on")
  syntax on
endif

" let g:polyglot_disabled = ['javascript.plugin']
let g:vim_svelte_plugin_use_sass = 1

let g:gruvbox_contrast_dark = "hard"
colorscheme gruvbox
let g:rainbow_active = 1
let g:rainbow_conf = {
\	'ctermfgs': ['blue', 'darkgray', 'lightgray']
\}
let g:snipMate = { 'snippet_version' : 1 }
